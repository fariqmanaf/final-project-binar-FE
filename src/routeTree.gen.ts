/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router';

// Import Routes

import { Route as rootRoute } from './routes/__root';

// Create Virtual Routes

const R404LazyImport = createFileRoute('/404')();
const IndexLazyImport = createFileRoute('/')();
const NotificationIndexLazyImport = createFileRoute('/notification/')();
const HistoryIndexLazyImport = createFileRoute('/history/')();
const FlightIndexLazyImport = createFileRoute('/flight/')();
const AccountIndexLazyImport = createFileRoute('/account/')();
const PaymentDoneLazyImport = createFileRoute('/payment/done')();
const PaymentTransactionIdLazyImport = createFileRoute('/payment/$transactionId')();
const CheckoutDepartureIdLazyImport = createFileRoute('/checkout/$departureId')();
const AuthRegisterLazyImport = createFileRoute('/auth/register')();
const AuthLogoutLazyImport = createFileRoute('/auth/logout')();
const AuthLoginLazyImport = createFileRoute('/auth/login')();
const AuthPasswordResetVerifyEmailLazyImport = createFileRoute('/auth/password-reset/verify-email')();
const AuthPasswordResetTokenLazyImport = createFileRoute('/auth/password-reset/$token')();

// Create/Update Routes

const R404LazyRoute = R404LazyImport.update({
  id: '/404',
  path: '/404',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/404.lazy').then((d) => d.Route));

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route));

const NotificationIndexLazyRoute = NotificationIndexLazyImport.update({
  id: '/notification/',
  path: '/notification/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/notification/index.lazy').then((d) => d.Route));

const HistoryIndexLazyRoute = HistoryIndexLazyImport.update({
  id: '/history/',
  path: '/history/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/history/index.lazy').then((d) => d.Route));

const FlightIndexLazyRoute = FlightIndexLazyImport.update({
  id: '/flight/',
  path: '/flight/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/flight/index.lazy').then((d) => d.Route));

const AccountIndexLazyRoute = AccountIndexLazyImport.update({
  id: '/account/',
  path: '/account/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/account/index.lazy').then((d) => d.Route));

const PaymentDoneLazyRoute = PaymentDoneLazyImport.update({
  id: '/payment/done',
  path: '/payment/done',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/payment/done.lazy').then((d) => d.Route));

const PaymentTransactionIdLazyRoute = PaymentTransactionIdLazyImport.update({
  id: '/payment/$transactionId',
  path: '/payment/$transactionId',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/payment/$transactionId.lazy').then((d) => d.Route));

const CheckoutDepartureIdLazyRoute = CheckoutDepartureIdLazyImport.update({
  id: '/checkout/$departureId',
  path: '/checkout/$departureId',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/checkout/$departureId.lazy').then((d) => d.Route));

const AuthRegisterLazyRoute = AuthRegisterLazyImport.update({
  id: '/auth/register',
  path: '/auth/register',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/auth/register.lazy').then((d) => d.Route));

const AuthLogoutLazyRoute = AuthLogoutLazyImport.update({
  id: '/auth/logout',
  path: '/auth/logout',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/auth/logout.lazy').then((d) => d.Route));

const AuthLoginLazyRoute = AuthLoginLazyImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/auth/login.lazy').then((d) => d.Route));

const AuthPasswordResetVerifyEmailLazyRoute = AuthPasswordResetVerifyEmailLazyImport.update({
  id: '/auth/password-reset/verify-email',
  path: '/auth/password-reset/verify-email',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/auth/password-reset/verify-email.lazy').then((d) => d.Route));

const AuthPasswordResetTokenLazyRoute = AuthPasswordResetTokenLazyImport.update({
  id: '/auth/password-reset/$token',
  path: '/auth/password-reset/$token',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/auth/password-reset/$token.lazy').then((d) => d.Route));

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/';
      path: '/';
      fullPath: '/';
      preLoaderRoute: typeof IndexLazyImport;
      parentRoute: typeof rootRoute;
    };
    '/404': {
      id: '/404';
      path: '/404';
      fullPath: '/404';
      preLoaderRoute: typeof R404LazyImport;
      parentRoute: typeof rootRoute;
    };
    '/auth/login': {
      id: '/auth/login';
      path: '/auth/login';
      fullPath: '/auth/login';
      preLoaderRoute: typeof AuthLoginLazyImport;
      parentRoute: typeof rootRoute;
    };
    '/auth/logout': {
      id: '/auth/logout';
      path: '/auth/logout';
      fullPath: '/auth/logout';
      preLoaderRoute: typeof AuthLogoutLazyImport;
      parentRoute: typeof rootRoute;
    };
    '/auth/register': {
      id: '/auth/register';
      path: '/auth/register';
      fullPath: '/auth/register';
      preLoaderRoute: typeof AuthRegisterLazyImport;
      parentRoute: typeof rootRoute;
    };
    '/checkout/$departureId': {
      id: '/checkout/$departureId';
      path: '/checkout/$departureId';
      fullPath: '/checkout/$departureId';
      preLoaderRoute: typeof CheckoutDepartureIdLazyImport;
      parentRoute: typeof rootRoute;
    };
    '/payment/$transactionId': {
      id: '/payment/$transactionId';
      path: '/payment/$transactionId';
      fullPath: '/payment/$transactionId';
      preLoaderRoute: typeof PaymentTransactionIdLazyImport;
      parentRoute: typeof rootRoute;
    };
    '/payment/done': {
      id: '/payment/done';
      path: '/payment/done';
      fullPath: '/payment/done';
      preLoaderRoute: typeof PaymentDoneLazyImport;
      parentRoute: typeof rootRoute;
    };
    '/account/': {
      id: '/account/';
      path: '/account';
      fullPath: '/account';
      preLoaderRoute: typeof AccountIndexLazyImport;
      parentRoute: typeof rootRoute;
    };
    '/flight/': {
      id: '/flight/';
      path: '/flight';
      fullPath: '/flight';
      preLoaderRoute: typeof FlightIndexLazyImport;
      parentRoute: typeof rootRoute;
    };
    '/history/': {
      id: '/history/';
      path: '/history';
      fullPath: '/history';
      preLoaderRoute: typeof HistoryIndexLazyImport;
      parentRoute: typeof rootRoute;
    };
    '/notification/': {
      id: '/notification/';
      path: '/notification';
      fullPath: '/notification';
      preLoaderRoute: typeof NotificationIndexLazyImport;
      parentRoute: typeof rootRoute;
    };
    '/auth/password-reset/$token': {
      id: '/auth/password-reset/$token';
      path: '/auth/password-reset/$token';
      fullPath: '/auth/password-reset/$token';
      preLoaderRoute: typeof AuthPasswordResetTokenLazyImport;
      parentRoute: typeof rootRoute;
    };
    '/auth/password-reset/verify-email': {
      id: '/auth/password-reset/verify-email';
      path: '/auth/password-reset/verify-email';
      fullPath: '/auth/password-reset/verify-email';
      preLoaderRoute: typeof AuthPasswordResetVerifyEmailLazyImport;
      parentRoute: typeof rootRoute;
    };
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute;
  '/404': typeof R404LazyRoute;
  '/auth/login': typeof AuthLoginLazyRoute;
  '/auth/logout': typeof AuthLogoutLazyRoute;
  '/auth/register': typeof AuthRegisterLazyRoute;
  '/checkout/$departureId': typeof CheckoutDepartureIdLazyRoute;
  '/payment/$transactionId': typeof PaymentTransactionIdLazyRoute;
  '/payment/done': typeof PaymentDoneLazyRoute;
  '/account': typeof AccountIndexLazyRoute;
  '/flight': typeof FlightIndexLazyRoute;
  '/history': typeof HistoryIndexLazyRoute;
  '/notification': typeof NotificationIndexLazyRoute;
  '/auth/password-reset/$token': typeof AuthPasswordResetTokenLazyRoute;
  '/auth/password-reset/verify-email': typeof AuthPasswordResetVerifyEmailLazyRoute;
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute;
  '/404': typeof R404LazyRoute;
  '/auth/login': typeof AuthLoginLazyRoute;
  '/auth/logout': typeof AuthLogoutLazyRoute;
  '/auth/register': typeof AuthRegisterLazyRoute;
  '/checkout/$departureId': typeof CheckoutDepartureIdLazyRoute;
  '/payment/$transactionId': typeof PaymentTransactionIdLazyRoute;
  '/payment/done': typeof PaymentDoneLazyRoute;
  '/account': typeof AccountIndexLazyRoute;
  '/flight': typeof FlightIndexLazyRoute;
  '/history': typeof HistoryIndexLazyRoute;
  '/notification': typeof NotificationIndexLazyRoute;
  '/auth/password-reset/$token': typeof AuthPasswordResetTokenLazyRoute;
  '/auth/password-reset/verify-email': typeof AuthPasswordResetVerifyEmailLazyRoute;
}

export interface FileRoutesById {
  __root__: typeof rootRoute;
  '/': typeof IndexLazyRoute;
  '/404': typeof R404LazyRoute;
  '/auth/login': typeof AuthLoginLazyRoute;
  '/auth/logout': typeof AuthLogoutLazyRoute;
  '/auth/register': typeof AuthRegisterLazyRoute;
  '/checkout/$departureId': typeof CheckoutDepartureIdLazyRoute;
  '/payment/$transactionId': typeof PaymentTransactionIdLazyRoute;
  '/payment/done': typeof PaymentDoneLazyRoute;
  '/account/': typeof AccountIndexLazyRoute;
  '/flight/': typeof FlightIndexLazyRoute;
  '/history/': typeof HistoryIndexLazyRoute;
  '/notification/': typeof NotificationIndexLazyRoute;
  '/auth/password-reset/$token': typeof AuthPasswordResetTokenLazyRoute;
  '/auth/password-reset/verify-email': typeof AuthPasswordResetVerifyEmailLazyRoute;
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths:
    | '/'
    | '/404'
    | '/auth/login'
    | '/auth/logout'
    | '/auth/register'
    | '/checkout/$departureId'
    | '/payment/$transactionId'
    | '/payment/done'
    | '/account'
    | '/flight'
    | '/history'
    | '/notification'
    | '/auth/password-reset/$token'
    | '/auth/password-reset/verify-email';
  fileRoutesByTo: FileRoutesByTo;
  to:
    | '/'
    | '/404'
    | '/auth/login'
    | '/auth/logout'
    | '/auth/register'
    | '/checkout/$departureId'
    | '/payment/$transactionId'
    | '/payment/done'
    | '/account'
    | '/flight'
    | '/history'
    | '/notification'
    | '/auth/password-reset/$token'
    | '/auth/password-reset/verify-email';
  id:
    | '__root__'
    | '/'
    | '/404'
    | '/auth/login'
    | '/auth/logout'
    | '/auth/register'
    | '/checkout/$departureId'
    | '/payment/$transactionId'
    | '/payment/done'
    | '/account/'
    | '/flight/'
    | '/history/'
    | '/notification/'
    | '/auth/password-reset/$token'
    | '/auth/password-reset/verify-email';
  fileRoutesById: FileRoutesById;
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute;
  R404LazyRoute: typeof R404LazyRoute;
  AuthLoginLazyRoute: typeof AuthLoginLazyRoute;
  AuthLogoutLazyRoute: typeof AuthLogoutLazyRoute;
  AuthRegisterLazyRoute: typeof AuthRegisterLazyRoute;
  CheckoutDepartureIdLazyRoute: typeof CheckoutDepartureIdLazyRoute;
  PaymentTransactionIdLazyRoute: typeof PaymentTransactionIdLazyRoute;
  PaymentDoneLazyRoute: typeof PaymentDoneLazyRoute;
  AccountIndexLazyRoute: typeof AccountIndexLazyRoute;
  FlightIndexLazyRoute: typeof FlightIndexLazyRoute;
  HistoryIndexLazyRoute: typeof HistoryIndexLazyRoute;
  NotificationIndexLazyRoute: typeof NotificationIndexLazyRoute;
  AuthPasswordResetTokenLazyRoute: typeof AuthPasswordResetTokenLazyRoute;
  AuthPasswordResetVerifyEmailLazyRoute: typeof AuthPasswordResetVerifyEmailLazyRoute;
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  R404LazyRoute: R404LazyRoute,
  AuthLoginLazyRoute: AuthLoginLazyRoute,
  AuthLogoutLazyRoute: AuthLogoutLazyRoute,
  AuthRegisterLazyRoute: AuthRegisterLazyRoute,
  CheckoutDepartureIdLazyRoute: CheckoutDepartureIdLazyRoute,
  PaymentTransactionIdLazyRoute: PaymentTransactionIdLazyRoute,
  PaymentDoneLazyRoute: PaymentDoneLazyRoute,
  AccountIndexLazyRoute: AccountIndexLazyRoute,
  FlightIndexLazyRoute: FlightIndexLazyRoute,
  HistoryIndexLazyRoute: HistoryIndexLazyRoute,
  NotificationIndexLazyRoute: NotificationIndexLazyRoute,
  AuthPasswordResetTokenLazyRoute: AuthPasswordResetTokenLazyRoute,
  AuthPasswordResetVerifyEmailLazyRoute: AuthPasswordResetVerifyEmailLazyRoute,
};

export const routeTree = rootRoute._addFileChildren(rootRouteChildren)._addFileTypes<FileRouteTypes>();

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.jsx",
      "children": [
        "/",
        "/404",
        "/auth/login",
        "/auth/logout",
        "/auth/register",
        "/checkout/$departureId",
        "/payment/$transactionId",
        "/payment/done",
        "/account/",
        "/flight/",
        "/history/",
        "/notification/",
        "/auth/password-reset/$token",
        "/auth/password-reset/verify-email"
      ]
    },
    "/": {
      "filePath": "index.lazy.jsx"
    },
    "/404": {
      "filePath": "404.lazy.jsx"
    },
    "/auth/login": {
      "filePath": "auth/login.lazy.jsx"
    },
    "/auth/logout": {
      "filePath": "auth/logout.lazy.jsx"
    },
    "/auth/register": {
      "filePath": "auth/register.lazy.jsx"
    },
    "/checkout/$departureId": {
      "filePath": "checkout/$departureId.lazy.jsx"
    },
    "/payment/$transactionId": {
      "filePath": "payment/$transactionId.lazy.jsx"
    },
    "/payment/done": {
      "filePath": "payment/done.lazy.jsx"
    },
    "/account/": {
      "filePath": "account/index.lazy.jsx"
    },
    "/flight/": {
      "filePath": "flight/index.lazy.jsx"
    },
    "/history/": {
      "filePath": "history/index.lazy.jsx"
    },
    "/notification/": {
      "filePath": "notification/index.lazy.jsx"
    },
    "/auth/password-reset/$token": {
      "filePath": "auth/password-reset/$token.lazy.jsx"
    },
    "/auth/password-reset/verify-email": {
      "filePath": "auth/password-reset/verify-email.lazy.jsx"
    }
  }
}
ROUTE_MANIFEST_END */
